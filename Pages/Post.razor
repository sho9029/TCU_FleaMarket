@page "/post"
@inject IJSRuntime JSRuntime
@inject UserService UserService
@inject ExhibitService ExhibitService
@inject NavigationManager NavigationManager

<div id="post-form">
    <h3>商品の投稿</h3>
    <h4>商品の画像</h4>
    <img id="prev-img" src="" />
    <InputFile id="input-img" type="file" placeholder="image" accept="image/*" OnChange="OnInputFileChange" />
    <button type="button" class="btn" onclick="document.querySelector('#input-img').click();">Select image</button>
    <h4>商品の名前</h4>
    <input type="text" name="name" placeholder="name" @bind-value="@postItem.Name" />
    <h4>商品の価格</h4>
    &yen;<input type="number" name="price" placeholder="price" @bind-value=@postItem.Price />
    <h4>商品の説明</h4>
    <input type="text" name="description" placeholder="description" @bind-value="@postItem.Description" />
    <br>
    <button class="btn" name="submit" @onclick="@HandleSubmit">Submit</button>
</div>

@code {
    private PostItem postItem { get; set; } = new PostItem();
    private bool fileChanging = false;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = await e.File.RequestImageFileAsync("image/jpeg", 500, 500);
        var imgStream = file.OpenReadStream(file.Size);
        postItem.Image = new byte[imgStream.Length];
        await imgStream.ReadAsync(postItem.Image);
        await imgStream.DisposeAsync();

        var module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/post.js");
        await module.InvokeVoidAsync("setPrevImg", "#prev-img",
            $"data:image/jpeg;base64,{ Convert.ToBase64String(postItem.Image) }");
    }

    private async Task HandleSubmit()
    {
        while (fileChanging) ;
        var exhibit = new Exhibit
        {
            // Debug
            ExhibitorsId = 1200,
            Name = postItem.Name,
            Description = postItem.Description,
            Price = postItem.Price,
            Image = postItem.Image,
        };

        await ExhibitService.AddExhibitAsync(exhibit);
        NavigationManager.NavigateTo("/", false);
    }
}
